package Olimpiadas;

public class PanArray {
    private Evento[] eventos;
    private int count;

    public PanArray(int capacity) {
        eventos = new Evento[capacity];
        count = 0;
    }

    public void cadastrarEvento(Evento evento) {
        if (count < eventos.length) {
            eventos[count++] = evento;
            System.out.println("Evento cadastrado com sucesso.");
        } else {
            System.out.println("Não foi possível cadastrar o evento. A coleção está cheia.");
        }
    }

    public void removerEvento(int codigo) {
        for (int i = 0; i < count; i++) {
            if (eventos[i].getCodigo() == codigo) {
                eventos[i] = eventos[count - 1];
                eventos[count - 1] = null;
                count--;
                System.out.println("Evento removido com sucesso.");
                return;
            }
        }
        System.out.println("Não foi possível remover o evento. Evento não encontrado.");
    }

    public Evento consultarEvento(int codigo) {
        for (int i = 0; i < count; i++) {
            if (eventos[i].getCodigo() == codigo) {
                return eventos[i];
            }
        }
        return null;
    }

    public void listarEventos() {
        for (int i = 0; i < count; i++) {
            Evento evento = eventos[i];
            System.out.println("Código: " + evento.getCodigo());
            System.out.println("Título: " + evento.getTitulo());
            System.out.println("Local: " + evento.getLocal());
            System.out.println("Data: " + evento.getData());
            System.out.println("Hora: " + evento.getHora());
            System.out.println("Capacidade: " + evento.getCapacidade());
            System.out.println("Lugares Vendidos: " + evento.getLugaresVendidos());
            System.out.println("Valor do Ingresso: " + evento.getValorIngresso());
            System.out.println("Status: " + evento.getStatus());
            System.out.println("----------------------------------");
        }
    }

	public void adicionarEvento(evento evento) {
		// TODO Auto-generated method stub

	}
}

